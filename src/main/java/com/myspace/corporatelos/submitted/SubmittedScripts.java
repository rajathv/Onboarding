package com.myspace.corporatelos.submitted;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class SubmittedScripts implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	public SubmittedScripts() {
	}

	public static void checkPricingRecords(
			org.kie.api.runtime.process.ProcessContext kcontext) {
		System.out.println("response: "
				+ kcontext.getVariable("response").toString());
		try {
			org.json.JSONObject responseObj = new org.json.JSONObject(kcontext
					.getVariable("response").toString());
			org.json.JSONArray pricingArray = responseObj
					.getJSONArray("pricing");
			if (pricingArray.length() > 0)
				kcontext.setVariable("result", "Approved");
			else
				kcontext.setVariable("result", "Rejected");
		} catch (Exception e) {
			System.out.println("Exception: " + e.toString());
		}
	}

	public static void checkNarratives(
			org.kie.api.runtime.process.ProcessContext kcontext) {
		System.out.println("response: "
				+ kcontext.getVariable("response").toString());
		try {
			org.json.JSONObject responseObj = new org.json.JSONObject(kcontext
					.getVariable("response").toString());
			org.json.JSONArray narrativesArray = responseObj
					.getJSONArray("narratives");
			if (narrativesArray.length() > 0) {
				for (int i = 0; i < narrativesArray.length(); i++) {
					org.json.JSONObject indNarrative = new org.json.JSONObject(
							narrativesArray.get(i).toString());
					if (indNarrative.get("categoryId").equals("01")) {
						kcontext.setVariable("result", "Approved");
						break;
					} else {
						kcontext.setVariable("result", "Rejected");
					}
				}
			} else {
				kcontext.setVariable("result", "Rejected");
			}
		} catch (Exception e) {
			System.out.println("Exception: " + e.toString());
		}
	}

}